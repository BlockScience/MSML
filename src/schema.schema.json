{
    "$schema": "http://json-schema.org/draft-06/schema#",
    "$ref": "./schema.schema.json/#/definitions/MSMLSpec",
    "title": "MSML",
    "$id": "https://github.com/BlockScience/MSML/src/schema.schema.json",
    "definitions": {
        "MSMLSpec": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "Policies": {
                    "type": "array",
                    "items": {
                        "$ref": "./schema.schema.json/#/definitions/Policy"
                    }
                },
                "Spaces": {
                    "type": "array",
                    "items": {
                        "$ref": "./schema.schema.json/#/definitions/Space"
                    }
                },
                "State": {
                    "type": "array",
                    "items": {
                        "$ref": "./schema.schema.json/#/definitions/State"
                    }
                },
                "Stateful Metrics": {
                    "type": "array",
                    "items": {}
                },
                "Parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "./schema.schema.json/#/definitions/Parameter"
                    }
                },
                "Mechanisms": {
                    "type": "array",
                    "items": {
                        "$ref": "./schema.schema.json/#/definitions/Mechanism"
                    }
                },
                "Entities": {
                    "type": "array",
                    "items": {
                        "$ref": "./schema.schema.json/#/definitions/Entity"
                    }
                },
                "Boundary Actions": {
                    "type": "array",
                    "items": {}
                },
                "Control Actions": {
                    "type": "array",
                    "items": {
                        "$ref": "./schema.schema.json/#/definitions/ControlAction"
                    }
                },
                "Wiring": {
                    "type": "array",
                    "items": {
                        "$ref": "./schema.schema.json/#/definitions/Wiring"
                    }
                },
                "Types": {
                    "type": "array",
                    "items": {
                        "$ref": "./schema.schema.json/#/definitions/Type"
                    }
                },
                "Metrics": {
                    "type": "array",
                    "items": {
                        "$ref": "./schema.schema.json/#/definitions/Metric"
                    }
                },
                "Displays": {"type": "object",
                "additionalProperties": false,
                "properties": {
                    "wiring": {
                        "type": "array",
                        "items": {
                            "$ref": "./schema.schema.json/#/definitions/WiringDisplay"
                        }
                    }
                },
                "required": [
                    "wiring"
                ]}
            },
            "required": [
                "Boundary Actions",
                "Control Actions",
                "Entities",
                "Mechanisms",
                "Parameters",
                "Policies",
                "Spaces",
                "State",
                "Stateful Metrics",
                "Types",
                "Wiring",
                "Metrics"
            ],
            "title": "MSMLSpec",
            "description": "A JSON schema that is used in the mathematical specification mapping library to create the underlying MSML object."
        },
        "ControlAction": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "constraints": {
                    "type": "array",
                    "items": {}
                },
                "control_action_options": {
                    "type": "array",
                    "items": {}
                },
                "codomain": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "parameters_used": {
                    "type": "array",
                    "items": {}
                }
            },
            "required": [
                "codomain",
                "constraints",
                "control_action_options",
                "description",
                "name",
                "parameters_used"
            ],
            "title": "ControlAction",
            "description": "The definition of actions that the system might call, such as an action to refill the stock of an item when reserves run too low or something that could get triggered from a sensor. The key differentiator from boundary actions is that there is no entity calling it and it is not done with randomness."
        },
        "Entity": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "metadata": {"type": "object"}
            },
            "required": [
                "name",
                "notes",
                "state"
            ],
            "title": "Entity",
            "description": "Entities are any class of user or infrastructure that should have their own state and potentially ability to call boundary actions. Examples could be a customer or a company (for which a simulation might assume it is acting as one cohesive unit)"
        },
        "Mechanism": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "constraints": {
                    "type": "array",
                    "items": {}
                },
                "logic": {
                    "type": "string"
                },
                "domain": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "parameters_used": {
                    "type": "array",
                    "items": {}
                },
                "updates": {
                    "type": "array",
                    "items": {
                        "items": {
                            "$ref": "./schema.schema.json/#/definitions/Update"
                        }
                    }
                },
                "metadata": {"type": "object"}
            },
            "required": [
                "constraints",
                "description",
                "domain",
                "logic",
                "name",
                "parameters_used",
                "updates"
            ],
            "title": "Mechanism",
            "description": "Anything that updates state in the system, usually policies will call these with the outputs of logic. The reasoning to split them out is so that if at some point you want to add a recording variable every time an account is changed or do something like have a variable listener, you can just change the mechanism responsible for it in only one place."
        },
        "Parameter": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "parameters": {
                    "type": "array",
                    "items": {
                        "$ref": "./schema.schema.json/#/definitions/ParameterElement"
                    }
                }
            },
            "required": [
                "name",
                "notes",
                "parameters"
            ],
            "title": "Parameter"
        },
        "ParameterElement": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "variable_type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "symbol": {
                    "type": ["string","null"]
                },
                "domain": {
                    "type": ["string","null"]
                },
                "parameter_class": {
                    "type": "string"
                }
            },
            "required": [
                "description",
                "domain",
                "name",
                "parameter_class",
                "symbol",
                "variable_type"
            ],
            "title": "ParameterElement"
        },
        "Policy": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "constraints": {
                    "type": "array",
                    "items": {}
                },
                "policy_options": {
                    "type": "array",
                    "items": {
                        "$ref": "./schema.schema.json/#/definitions/PolicyOption"
                    }
                },
                "domain": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "codomain": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "parameters_used": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "metrics_used": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "codomain",
                "constraints",
                "description",
                "domain",
                "name",
                "parameters_used",
                "policy_options",
                "metrics_used"
            ],
            "title": "Policy"
        },
        "PolicyOption": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "logic": {
                    "type": "string"
                }
            },
            "required": [
                "description",
                "logic",
                "name"
            ],
            "title": "PolicyOption"
        },
        "Space": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string"
                },
                "schema": {
                    "$ref": "./schema.schema.json/#/definitions/Schema"
                }
            },
            "required": [
                "name",
                "schema"
            ],
            "title": "Space"
        },
        "Schema": {
            "type": "object",
            "additionalProperties": true,
            "required": [],
            "title": "Schema"
        },
        "State": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "./schema.schema.json/#/definitions/Variable"
                    }
                }
            },
            "required": [
                "name",
                "notes",
                "variables"
            ],
            "title": "State"
        },
        "Variable": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "symbol": {
                    "type": ["string", "null"]
                },
                "domain": {
                    "type": ["string", "null"]
                }
            },
            "required": [
                "description",
                "domain",
                "name",
                "symbol",
                "type"
            ],
            "title": "Variable"
        },
        "Type": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "metadata": {"type": "object"}
            },
            "required": [
                "name",
                "notes",
                "type"
            ],
            "title": "Type"
        },
        "Metric": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "type": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "variables_used": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "parameters_used": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "metrics_used": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "domain": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "logic": {
                    "type": "string"
                },
                "symbol": {
                    "type": ["string", "null"]
                }
            },
            "required": [
                "description",
                "domain",
                "logic",
                "name",
                "parameters_used",
                "symbol",
                "type",
                "variables_used",
                "metrics_used"
            ],
            "title": "Metric"
        },
        "Wiring": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string"
                },
                "components": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "description": {
                    "type": "string"
                },
                "constraints": {
                    "type": "array",
                    "items": {}
                },
                "type": {
                    "$ref": "./schema.schema.json/#/definitions/TypeEnum"
                },
                "mermaid_show_name": {
                    "type": "boolean"
                },
                "loop": {
                    "type": "boolean"
                },
                "optional_indices": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "required": [
                "components",
                "constraints",
                "description",
                "name",
                "type"
            ],
            "title": "Wiring"
        },
        "Update": {
            "title": "Update"
        },
        "TypeEnum": {
            "type": "string",
            "enum": [
                "Parallel",
                "Stack"
            ],
            "title": "TypeEnum"
        },
        "WiringDisplay": {"type": "object",
        "additionalProperties": false,
        "properties": {
            "name": {
                "type": "string"
            },
            "description": {
                "type": "string"
            },
            "components": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        },
        "required": [
            "components",
            "name",
            "description"
        ]}
    }
}